
fibo.o:     file format pe-i386


Disassembly of section .text:

00000000 <_fibonacci>:
   0:	55                   	push   ebp
   1:	89 e5                	mov    ebp,esp
   3:	53                   	push   ebx
   4:	83 ec 14             	sub    esp,0x14
   7:	83 7d 08 01          	cmp    DWORD PTR [ebp+0x8],0x1
   b:	7f 05                	jg     12 <_fibonacci+0x12>
   d:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  10:	eb 20                	jmp    32 <_fibonacci+0x32>
  12:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  15:	83 e8 01             	sub    eax,0x1
  18:	89 04 24             	mov    DWORD PTR [esp],eax
  1b:	e8 e0 ff ff ff       	call   0 <_fibonacci>
  20:	89 c3                	mov    ebx,eax
  22:	8b 45 08             	mov    eax,DWORD PTR [ebp+0x8]
  25:	83 e8 02             	sub    eax,0x2
  28:	89 04 24             	mov    DWORD PTR [esp],eax
  2b:	e8 d0 ff ff ff       	call   0 <_fibonacci>
  30:	01 d8                	add    eax,ebx
  32:	83 c4 14             	add    esp,0x14
  35:	5b                   	pop    ebx
  36:	5d                   	pop    ebp
  37:	c3                   	ret    

00000038 <_main>:
  38:	55                   	push   ebp
  39:	89 e5                	mov    ebp,esp
  3b:	83 e4 f0             	and    esp,0xfffffff0
  3e:	83 ec 20             	sub    esp,0x20
  41:	e8 00 00 00 00       	call   46 <_main+0xe>
  46:	c7 04 24 00 00 00 00 	mov    DWORD PTR [esp],0x0
  4d:	e8 00 00 00 00       	call   52 <_main+0x1a>
  52:	8d 44 24 1c          	lea    eax,[esp+0x1c]
  56:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
  5a:	c7 04 24 11 00 00 00 	mov    DWORD PTR [esp],0x11
  61:	e8 00 00 00 00       	call   66 <_main+0x2e>
  66:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
  6a:	85 c0                	test   eax,eax
  6c:	79 0e                	jns    7c <_main+0x44>
  6e:	c7 04 24 14 00 00 00 	mov    DWORD PTR [esp],0x14
  75:	e8 00 00 00 00       	call   7a <_main+0x42>
  7a:	eb 26                	jmp    a2 <_main+0x6a>
  7c:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
  80:	89 04 24             	mov    DWORD PTR [esp],eax
  83:	e8 78 ff ff ff       	call   0 <_fibonacci>
  88:	89 c2                	mov    edx,eax
  8a:	8b 44 24 1c          	mov    eax,DWORD PTR [esp+0x1c]
  8e:	89 54 24 08          	mov    DWORD PTR [esp+0x8],edx
  92:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
  96:	c7 04 24 43 00 00 00 	mov    DWORD PTR [esp],0x43
  9d:	e8 00 00 00 00       	call   a2 <_main+0x6a>
  a2:	b8 00 00 00 00       	mov    eax,0x0
  a7:	c9                   	leave  
  a8:	c3                   	ret    
  a9:	90                   	nop
  aa:	90                   	nop
  ab:	90                   	nop
